#+BEGIN_SRC Java

package org.jerry.leetcode;

import java.util.*;

/**
 * BinaryTreeRightSideView
 * <p/>
 * url : https://leetcode.com/problems/binary-tree-right-side-view/
 * <p/>
 * 199. Binary Tree Right Side View   Add to List QuestionEditorial Solution  My Submissions
 * Total Accepted: 64959
 * Total Submissions: 168322
 * Difficulty: Medium
 * Contributors: Admin
 * Given a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.
 * <p/>
 * For example:
 * Given the following binary tree,
 * 1            <---
 * /   \
 * 2     3         <---
 * \     \
 * 5     4       <---
 * You should return [1, 3, 4].
 * <p/>
 * Credits:
 * Special thanks to @amrsaqr for adding this problem and creating all test cases.
 * <p/>
 * Subscribe to see which companies asked this question
 * <p/>
 * Show Tags
 * Show Similar Problems
 * <p/>
 * <p/>
 * 层次遍历
 *
 */

public class BinaryTreeRightSideView {

    public class Solution {
        public List<Integer> rightSideView(TreeNode root) {
            List<Integer> result = new ArrayList<Integer>();
            rightView(root, result, 0);
            return result;
        }

        public void rightView(TreeNode curr, List<Integer> result, int currDepth){
            if(curr == null){
                return;
            }
            if(currDepth == result.size()){
                result.add(curr.val);
            }

            rightView(curr.right, result, currDepth + 1);
            rightView(curr.left, result, currDepth + 1);

        }
    }

}

#+END_SRC
