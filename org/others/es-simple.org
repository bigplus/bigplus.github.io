#+TITLE: HBase-Es-Index策略分析

* 对于多维度灵活查询方案
** 全量数据索引，也就是对领域对象表所有数据，依据k/v方式，进行索引。查询过程ES，与HBase无关。
#+CAPTION: 部分索引 vs 全量索引
[[./img/query-design-diff.png]]
*** 优点在于 ： 
+ 在Es给拱的API中，可以顺利完成sum/min/max/avg等函数
+ 实现简单，逻辑清晰, 迭代周期短
*** 缺点在于:
+ 数据量过于庞大
+ 短板效应
** 
** 部分索引：针对指定列建立索引，查询过程依赖 Es 和 HBase。
*** 优点在于:
+ 物理空间占用理想
+ 可配置
*** 缺点在于：
+ 开发周期长

* 对于 es 的基本概念
+ index   相当于 数据库
+ type    相当于 表
+ mapping 相当于 表结构
  + 类型主要有 integer， double， string，date等。
  + 在 es 中 field 是大小写敏感的，定义要严谨。
* 

* HBase, Es 全部采用：谓词下推的方式，es已经实现，完成

* HBase 端，采用协处理器和Filter方式，实现查询

* 协处理器方式同步数据到es，统一es和HBase的使用，成为一种解决问题的方式

** 与 HBase 的比较
+ 保证数据类型（非 统一 String）
+ 部分索引, 保证建立索引速度更快

架构采用 hbase，es， phoenix， es-sql，jdbc，http方式对外提供服务

综上等因素，以及结合查询平台目标和主题表策略，选择部分索引方式
